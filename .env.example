# Fullstack Monolith Transformation - Environment Variables Example
# Copy this file to .env and update the values for your environment

# ===================================
# Application Configuration
# ===================================

# Environment (development, staging, production)
NODE_ENV=development
DJANGO_ENV=development

# Debug mode
DEBUG=true
DJANGO_DEBUG=true

# Application URLs
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WEB_URL=http://localhost:3000
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# CORS settings
DJANGO_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ===================================
# Database Configuration
# ===================================

# PostgreSQL (Primary Database)
DATABASE_URL=postgresql://username:password@localhost:5432/fullstack_monolith_dev
DB_HOST=localhost
DB_PORT=5432
DB_NAME=fullstack_monolith_dev
DB_USER=username
DB_PASSWORD=password

# Database connection pooling
DB_CONN_MAX_AGE=600
DB_CONN_HEALTH_CHECKS=true

# Read replica (optional)
DATABASE_REPLICA_URL=postgresql://username:password@localhost:5433/fullstack_monolith_dev

# ===================================
# Redis Configuration
# ===================================

# Redis (Cache and Sessions)
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Redis for Celery
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# Redis for WebSocket (Django Channels)
CHANNELS_REDIS_URL=redis://localhost:6379/2

# ===================================
# Security Configuration
# ===================================

# Django Secret Key (generate a new one for production)
DJANGO_SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production
JWT_ACCESS_TOKEN_LIFETIME=15  # minutes
JWT_REFRESH_TOKEN_LIFETIME=7  # days

# NextAuth.js Secret (for Next.js authentication)
NEXTAUTH_SECRET=your-nextauth-secret-change-this-in-production
NEXTAUTH_URL=http://localhost:3000

# Password hashing
PASSWORD_HASHERS=django.contrib.auth.hashers.Argon2PasswordHasher

# ===================================
# Email Configuration
# ===================================

# Email backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=true
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password

# Default from email
DEFAULT_FROM_EMAIL=noreply@yourapp.com
SERVER_EMAIL=server@yourapp.com

# ===================================
# File Storage Configuration
# ===================================

# Media files
MEDIA_URL=/media/
MEDIA_ROOT=media/

# Static files
STATIC_URL=/static/
STATIC_ROOT=staticfiles/

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE=5242880  # 5MB
DATA_UPLOAD_MAX_MEMORY_SIZE=5242880  # 5MB

# ===================================
# Cloud Storage (AWS S3)
# ===================================

# AWS S3 Configuration (optional)
USE_S3=false
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION_NAME=us-east-1
AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain.com

# ===================================
# OAuth Configuration
# ===================================

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Facebook OAuth
FACEBOOK_CLIENT_ID=your-facebook-client-id
FACEBOOK_CLIENT_SECRET=your-facebook-client-secret

# ===================================
# API Keys and External Services
# ===================================

# Sentry (Error Monitoring)
SENTRY_DSN=your-sentry-dsn-url

# Stripe (Payments)
STRIPE_PUBLIC_KEY=pk_test_your-stripe-public-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# SendGrid (Email Service)
SENDGRID_API_KEY=your-sendgrid-api-key

# Twilio (SMS Service)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# ===================================
# Monitoring and Analytics
# ===================================

# Google Analytics
NEXT_PUBLIC_GA_TRACKING_ID=GA-XXXXXXXXX

# Hotjar
NEXT_PUBLIC_HOTJAR_ID=your-hotjar-id

# Prometheus metrics
PROMETHEUS_METRICS_ENABLED=true
PROMETHEUS_METRICS_PORT=8001

# ===================================
# Feature Flags
# ===================================

# Feature toggles
FEATURE_BLOG_COMMENTS=true
FEATURE_NEWSLETTER=true
FEATURE_ANALYTICS=true
FEATURE_SOCIAL_LOGIN=true
FEATURE_MFA=false
FEATURE_WEBSOCKETS=true

# ===================================
# Performance Configuration
# ===================================

# Cache settings
CACHE_TTL=300  # 5 minutes
CACHE_MAX_ENTRIES=1000

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60

# Session configuration
SESSION_COOKIE_AGE=1209600  # 2 weeks
SESSION_COOKIE_SECURE=false  # Set to true in production with HTTPS
SESSION_COOKIE_HTTPONLY=true

# ===================================
# Logging Configuration
# ===================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
DJANGO_LOG_LEVEL=INFO

# Log file paths
LOG_FILE_PATH=logs/app.log
DJANGO_LOG_FILE_PATH=logs/django.log

# ===================================
# Development Tools
# ===================================

# Django Debug Toolbar
DJANGO_DEBUG_TOOLBAR=true

# Django Extensions
DJANGO_EXTENSIONS=true

# Hot reloading
NEXT_PUBLIC_HOT_RELOAD=true

# ===================================
# Testing Configuration
# ===================================

# Test database
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/test_fullstack_monolith

# Test settings
TESTING=false
SKIP_MIGRATIONS=false

# ===================================
# Docker Configuration
# ===================================

# Docker compose settings
COMPOSE_PROJECT_NAME=fullstack-monolith
COMPOSE_FILE=docker-compose.yml

# Container ports
API_PORT=8000
WEB_PORT=3000
DB_PORT=5432
REDIS_PORT=6379

# ===================================
# Kubernetes Configuration
# ===================================

# Kubernetes namespace
K8S_NAMESPACE=default

# Image registry
DOCKER_REGISTRY=your-registry.com
IMAGE_TAG=latest

# ===================================
# Backup Configuration
# ===================================

# Database backup
DB_BACKUP_ENABLED=true
DB_BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
DB_BACKUP_RETENTION_DAYS=30

# Media backup
MEDIA_BACKUP_ENABLED=true
MEDIA_BACKUP_SCHEDULE=0 3 * * *  # Daily at 3 AM