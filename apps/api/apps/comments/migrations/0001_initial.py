# Generated by Django 4.2.23 on 2025-08-19 18:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(help_text='Comment content', max_length=1000)),
                ('guest_name', models.CharField(blank=True, max_length=100)),
                ('guest_email', models.EmailField(blank=True, max_length=254)),
                ('guest_website', models.URLField(blank=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_spam', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='comments.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'blog_comment',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('harassment', 'Harassment'), ('off_topic', 'Off Topic'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='comments.comment')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Report',
                'verbose_name_plural': 'Comment Reports',
                'db_table': 'blog_comment_report',
                'indexes': [models.Index(fields=['comment', 'is_resolved'], name='blog_commen_comment_a20793_idx'), models.Index(fields=['reporter'], name='blog_commen_reporte_9f3567_idx')],
                'unique_together': {('comment', 'reporter')},
            },
        ),
        migrations.CreateModel(
            name='CommentModerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('marked_spam', 'Marked as Spam'), ('edited', 'Edited'), ('deleted', 'Deleted')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_logs', to='comments.comment')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Moderation Log',
                'verbose_name_plural': 'Comment Moderation Logs',
                'db_table': 'blog_comment_moderation_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['comment'], name='blog_commen_comment_e4594f_idx'), models.Index(fields=['moderator'], name='blog_commen_moderat_0fbdc6_idx')],
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='comments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
                'db_table': 'blog_comment_like',
                'indexes': [models.Index(fields=['comment', 'is_like'], name='blog_commen_comment_b92a83_idx')],
                'unique_together': {('comment', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'is_approved'], name='blog_commen_post_id_7710b1_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author'], name='blog_commen_author__8d1ff2_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='blog_commen_parent__43ce68_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='blog_commen_created_4e025c_idx'),
        ),
    ]
