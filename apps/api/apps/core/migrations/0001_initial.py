# Generated by Django 4.2.23 on 2025-08-19 18:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Django Personal Blog', max_length=100)),
                ('site_description', models.TextField(blank=True)),
                ('site_keywords', models.CharField(blank=True, max_length=255)),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('site_favicon', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('default_meta_title', models.CharField(blank=True, max_length=60)),
                ('default_meta_description', models.CharField(blank=True, max_length=160)),
                ('google_analytics_id', models.CharField(blank=True, max_length=20)),
                ('google_search_console_id', models.CharField(blank=True, max_length=100)),
                ('enable_comments', models.BooleanField(default=True)),
                ('enable_newsletter', models.BooleanField(default=True)),
                ('enable_search', models.BooleanField(default=True)),
                ('enable_social_sharing', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
                'db_table': 'core_site_configuration',
            },
        ),
        migrations.CreateModel(
            name='Redirect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_path', models.CharField(max_length=200, unique=True)),
                ('new_path', models.CharField(max_length=200)),
                ('redirect_type', models.CharField(choices=[('301', '301 Permanent'), ('302', '302 Temporary')], default='301', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('hit_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Redirect',
                'verbose_name_plural': 'Redirects',
                'db_table': 'core_redirect',
                'indexes': [models.Index(fields=['old_path'], name='core_redire_old_pat_90abf3_idx'), models.Index(fields=['is_active'], name='core_redire_is_acti_28c060_idx')],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(help_text='URL or path', max_length=200)),
                ('location', models.CharField(choices=[('header', 'Header Menu'), ('footer', 'Footer Menu'), ('sidebar', 'Sidebar Menu')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('open_in_new_tab', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=50)),
                ('icon_class', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.menuitem')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'db_table': 'core_menu_item',
                'ordering': ['location', 'order', 'title'],
                'indexes': [models.Index(fields=['location', 'is_active'], name='core_menu_i_locatio_a257c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='CacheInvalidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=255)),
                ('cache_pattern', models.CharField(blank=True, max_length=255)),
                ('reason', models.CharField(max_length=100)),
                ('object_type', models.CharField(blank=True, max_length=50)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cache Invalidation',
                'verbose_name_plural': 'Cache Invalidations',
                'db_table': 'core_cache_invalidation',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['cache_key'], name='core_cache__cache_k_0c4166_idx'), models.Index(fields=['timestamp'], name='core_cache__timesta_767812_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('permission_change', 'Permission Change'), ('security_event', 'Security Event')], max_length=20)),
                ('object_type', models.CharField(blank=True, max_length=50)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'core_audit_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['action_type', 'timestamp'], name='core_audit__action__9c4f3a_idx'), models.Index(fields=['user', 'timestamp'], name='core_audit__user_id_66db5a_idx'), models.Index(fields=['object_type', 'object_id'], name='core_audit__object__fa16cb_idx')],
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('rate_limit', models.PositiveIntegerField(default=1000, help_text='Requests per hour')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'db_table': 'core_api_key',
                'indexes': [models.Index(fields=['key'], name='core_api_ke_key_19a837_idx'), models.Index(fields=['user', 'is_active'], name='core_api_ke_user_id_e74be9_idx')],
            },
        ),
    ]
