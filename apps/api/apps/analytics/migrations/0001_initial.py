# Generated by Django 4.2.23 on 2025-08-19 18:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('page_views', models.PositiveIntegerField(default=0)),
                ('is_bounce', models.BooleanField(default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'analytics_user_session',
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=255)),
                ('results_count', models.PositiveIntegerField()),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('ip_address', models.GenericIPAddressField()),
                ('search_type', models.CharField(default='general', max_length=20)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Query',
                'verbose_name_plural': 'Search Queries',
                'db_table': 'analytics_search_query',
            },
        ),
        migrations.CreateModel(
            name='SearchClickthrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clicked_url', models.URLField(max_length=500)),
                ('result_position', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('search_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clickthroughs', to='analytics.searchquery')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Clickthrough',
                'verbose_name_plural': 'Search Clickthroughs',
                'db_table': 'analytics_search_clickthrough',
            },
        ),
        migrations.CreateModel(
            name='PopularContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('post', 'Blog Post'), ('category', 'Category'), ('tag', 'Tag'), ('page', 'Page')], max_length=20)),
                ('content_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('url', models.URLField(max_length=500)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('avg_time_on_page', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('rank', models.PositiveIntegerField()),
                ('previous_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Popular Content',
                'verbose_name_plural': 'Popular Content',
                'db_table': 'analytics_popular_content',
                'ordering': ['rank'],
                'indexes': [models.Index(fields=['content_type', 'period_start'], name='analytics_p_content_034619_idx'), models.Index(fields=['rank'], name='analytics_p_rank_1057ec_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=500)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('referrer', models.URLField(blank=True, max_length=500)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('time_on_page', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Page View',
                'verbose_name_plural': 'Page Views',
                'db_table': 'analytics_page_view',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('user_action', 'User Action'), ('content', 'Content'), ('engagement', 'Engagement'), ('conversion', 'Conversion'), ('error', 'Error')], max_length=20)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('value', models.FloatField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('url', models.URLField(blank=True, max_length=500)),
                ('referrer', models.URLField(blank=True, max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='analytics.usersession')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'analytics_event',
            },
        ),
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_page_views', models.PositiveIntegerField(default=0)),
                ('unique_page_views', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('returning_users', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('avg_session_duration', models.FloatField(default=0.0)),
                ('posts_published', models.PositiveIntegerField(default=0)),
                ('comments_posted', models.PositiveIntegerField(default=0)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('unique_search_terms', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Daily Stats',
                'verbose_name_plural': 'Daily Stats',
                'db_table': 'analytics_daily_stats',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='analytics_d_date_26c219_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['session_key'], name='analytics_u_session_e235ed_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'started_at'], name='analytics_u_user_id_132036_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['started_at'], name='analytics_u_started_a02763_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['query'], name='analytics_s_query_8ba586_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['timestamp'], name='analytics_s_timesta_f2e618_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['user'], name='analytics_s_user_id_5f04fe_idx'),
        ),
        migrations.AddIndex(
            model_name='searchclickthrough',
            index=models.Index(fields=['search_query'], name='analytics_s_search__ac14fd_idx'),
        ),
        migrations.AddIndex(
            model_name='searchclickthrough',
            index=models.Index(fields=['timestamp'], name='analytics_s_timesta_fb7ead_idx'),
        ),
        migrations.AddIndex(
            model_name='pageview',
            index=models.Index(fields=['url', 'timestamp'], name='analytics_p_url_d0ea94_idx'),
        ),
        migrations.AddIndex(
            model_name='pageview',
            index=models.Index(fields=['user', 'timestamp'], name='analytics_p_user_id_9cb251_idx'),
        ),
        migrations.AddIndex(
            model_name='pageview',
            index=models.Index(fields=['ip_address'], name='analytics_p_ip_addr_c20694_idx'),
        ),
        migrations.AddIndex(
            model_name='pageview',
            index=models.Index(fields=['timestamp'], name='analytics_p_timesta_53161a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['name', 'timestamp'], name='analytics_e_name_97c17b_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['category', 'timestamp'], name='analytics_e_categor_388b1d_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['user', 'timestamp'], name='analytics_e_user_id_2b59cd_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['timestamp'], name='analytics_e_timesta_fdc538_idx'),
        ),
    ]
