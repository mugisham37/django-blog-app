# Generated by Django 4.2.23 on 2025-08-19 18:29

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('content_html', ckeditor_uploader.fields.RichTextUploadingField()),
                ('content_text', models.TextField(help_text='Plain text version')),
                ('campaign_type', models.CharField(choices=[('newsletter', 'Newsletter'), ('announcement', 'Announcement'), ('digest', 'Digest'), ('promotional', 'Promotional')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('target_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('never', 'Never')], help_text='Send to subscribers with this frequency preference', max_length=20, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('emails_sent', models.PositiveIntegerField(default=0)),
                ('emails_delivered', models.PositiveIntegerField(default=0)),
                ('emails_opened', models.PositiveIntegerField(default=0)),
                ('emails_clicked', models.PositiveIntegerField(default=0)),
                ('emails_bounced', models.PositiveIntegerField(default=0)),
                ('emails_unsubscribed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('target_categories', models.ManyToManyField(blank=True, help_text='Send to subscribers interested in these categories', to='blog.category')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'db_table': 'newsletter_campaign',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('never', 'Never')], default='weekly', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('source', models.CharField(blank=True, max_length=100)),
                ('verification_token', models.CharField(blank=True, max_length=255)),
                ('verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribe_token', models.CharField(max_length=255, unique=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribe_reason', models.TextField(blank=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, help_text='Categories to receive updates about', to='blog.category')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscriber',
                'verbose_name_plural': 'Subscribers',
                'db_table': 'newsletter_subscriber',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('newsletter', 'Newsletter'), ('welcome', 'Welcome'), ('verification', 'Email Verification'), ('unsubscribe', 'Unsubscribe Confirmation')], max_length=20)),
                ('subject_template', models.CharField(max_length=200)),
                ('html_template', models.TextField()),
                ('text_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'newsletter_email_template',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_address', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed')], default='queued', max_length=20)),
                ('queued_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('bounce_reason', models.TextField(blank=True)),
                ('tracking_id', models.CharField(max_length=255, unique=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='newsletter.campaign')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='newsletter.subscriber')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'db_table': 'newsletter_email_log',
            },
        ),
        migrations.CreateModel(
            name='ClickTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('clicked_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('email_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='newsletter.emaillog')),
            ],
            options={
                'verbose_name': 'Click Tracking',
                'verbose_name_plural': 'Click Tracking',
                'db_table': 'newsletter_click_tracking',
            },
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['email'], name='newsletter__email_c1e80c_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['is_active', 'email_verified'], name='newsletter__is_acti_7bd6b6_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['frequency'], name='newsletter__frequen_42ada6_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['template_type', 'is_active'], name='newsletter__templat_336a69_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['campaign', 'status'], name='newsletter__campaig_0f6f60_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['subscriber'], name='newsletter__subscri_cadea3_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['tracking_id'], name='newsletter__trackin_57e510_idx'),
        ),
        migrations.AddIndex(
            model_name='clicktracking',
            index=models.Index(fields=['email_log'], name='newsletter__email_l_8f533e_idx'),
        ),
        migrations.AddIndex(
            model_name='clicktracking',
            index=models.Index(fields=['clicked_at'], name='newsletter__clicked_5fe00f_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['status'], name='newsletter__status_e9ce88_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['scheduled_at'], name='newsletter__schedul_f5b10e_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['campaign_type'], name='newsletter__campaig_03d95d_idx'),
        ),
    ]
