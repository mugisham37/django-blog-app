{
  "name": "fullstack-monolith-transformation",
  "version": "1.0.0",
  "description": "Enterprise-grade fullstack monolithic architecture with Django API and Next.js frontend",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:web\"",
    "dev:api": "cd apps/api && python manage.py runserver",
    "dev:web": "cd apps/web && npm run dev",
    "build": "npm run build:web && npm run build:api",
    "build:web": "cd apps/web && npm run build",
    "build:api": "cd apps/api && python manage.py collectstatic --noinput",
    "test": "node tools/test-runner.js",
    "test:unit": "cd tests && npm run test:unit",
    "test:integration": "cd tests && npm run test:integration",
    "test:e2e": "cd tests && npm run test:e2e",
    "test:api": "cd tests && npm run test:api",
    "test:performance": "cd tests && npm run test:performance",
    "test:django": "cd tests && npm run test:django",
    "test:packages": "cd tests && npm run test:packages",
    "test:coverage": "cd tests && npm run test:coverage",
    "test:watch": "cd tests && npm run test:watch",
    "test:ci": "cd tests && npm run test:ci",
    "test:web": "cd apps/web && npm test",
    "lint": "npm run lint:web && npm run lint:api && npm run lint:packages",
    "lint:web": "cd apps/web && npm run lint",
    "lint:api": "cd apps/api && flake8 .",
    "lint:packages": "npm run lint:core && npm run lint:auth && npm run lint:cache && npm run lint:database && npm run lint:config",
    "lint:core": "cd packages/core && flake8 .",
    "lint:auth": "cd packages/auth && flake8 .",
    "lint:cache": "cd packages/cache && flake8 .",
    "lint:database": "cd packages/database && flake8 .",
    "lint:config": "cd packages/config && flake8 .",
    "format": "npm run format:web && npm run format:api && npm run format:packages",
    "format:web": "cd apps/web && npm run format",
    "format:api": "cd apps/api && black . && isort .",
    "format:packages": "npm run format:core && npm run format:auth && npm run format:cache && npm run format:database && npm run format:config",
    "format:core": "cd packages/core && black . && isort .",
    "format:auth": "cd packages/auth && black . && isort .",
    "format:cache": "cd packages/cache && black . && isort .",
    "format:database": "cd packages/database && black . && isort .",
    "format:config": "cd packages/config && black . && isort .",
    "type-check": "npm run type-check:web && npm run type-check:api",
    "type-check:web": "cd apps/web && npx tsc --noEmit",
    "type-check:api": "cd apps/api && python -m mypy .",
    "security-scan": "npm run security:web && npm run security:api",
    "security:web": "cd apps/web && npm audit --audit-level moderate",
    "security:api": "cd apps/api && python -m safety check && python -m bandit -r .",
    "quality-check": "npm run lint && npm run type-check && npm run security-scan && node tools/code-quality-validator.js",
    "pre-commit": "pre-commit run --all-files",
    "setup-quality": "node tools/setup-code-quality.js || powershell -ExecutionPolicy Bypass -File tools/setup-code-quality.ps1",
    "install:all": "npm install && npm run install:web && npm run install:api && npm run install:tests",
    "install:web": "cd apps/web && npm install",
    "install:api": "cd apps/api && pip install -r requirements/development.txt",
    "install:tests": "cd tests && npm install",
    "clean": "npm run clean:web && npm run clean:api && npm run clean:tests",
    "clean:web": "cd apps/web && rm -rf .next node_modules",
    "clean:api": "cd apps/api && find . -name '*.pyc' -delete && find . -name '__pycache__' -delete",
    "clean:tests": "cd tests && npm run clean",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "setup:tests": "cd tests && npm run setup",
    "validate": "npm run lint && npm run test:ci"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "eslint": "^8.56.0",
    "eslint-config-next": "^14.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-security": "^2.1.0",
    "eslint-plugin-sonarjs": "^0.23.0",
    "prettier": "^3.2.4",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "prettier-plugin-tailwindcss": "^0.5.11",
    "markdownlint-cli": "^0.38.0",
    "validate-package-name": "^1.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/fullstack-monolith-transformation.git"
  },
  "keywords": [
    "django",
    "nextjs",
    "monolith",
    "fullstack",
    "enterprise",
    "typescript",
    "python"
  ],
  "author": "Your Organization",
  "license": "MIT",
  "lint-staged": {
    "apps/web/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "apps/api/**/*.py": [
      "black",
      "isort",
      "flake8"
    ]
  }
}
