apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-api
  namespace: fullstack-monolith
  labels:
    app: django-api
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: django-api
  template:
    metadata:
      labels:
        app: django-api
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
        - name: django-migrations
          image: django-api:latest
          command:
            - python
            - manage.py
            - migrate
            - --noinput
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: DATABASE_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SECRET_KEY
          envFrom:
            - configMapRef:
                name: django-config
        - name: django-collectstatic
          image: django-api:latest
          command:
            - python
            - manage.py
            - collectstatic
            - --noinput
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: DATABASE_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SECRET_KEY
          envFrom:
            - configMapRef:
                name: django-config
          volumeMounts:
            - name: static-files
              mountPath: /app/staticfiles
      containers:
        - name: django-api
          image: django-api:latest
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: DATABASE_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SECRET_KEY
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: JWT_SECRET_KEY
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_URL
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SENTRY_DSN
                  optional: true
          envFrom:
            - configMapRef:
                name: django-config
          volumeMounts:
            - name: media-files
              mountPath: /app/media
            - name: static-files
              mountPath: /app/staticfiles
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: media-files
          persistentVolumeClaim:
            claimName: media-pvc
        - name: static-files
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: django-api-service
  namespace: fullstack-monolith
  labels:
    app: django-api
    tier: backend
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: django-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-celery-worker
  namespace: fullstack-monolith
  labels:
    app: django-celery-worker
    tier: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: django-celery-worker
  template:
    metadata:
      labels:
        app: django-celery-worker
        tier: worker
    spec:
      containers:
        - name: celery-worker
          image: django-api:latest
          command:
            - celery
            - -A
            - config
            - worker
            - --loglevel=info
            - --concurrency=4
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: DATABASE_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SECRET_KEY
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_URL
          envFrom:
            - configMapRef:
                name: django-config
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "400m"
          livenessProbe:
            exec:
              command:
                - celery
                - -A
                - config
                - inspect
                - ping
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-celery-beat
  namespace: fullstack-monolith
  labels:
    app: django-celery-beat
    tier: scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: django-celery-beat
  template:
    metadata:
      labels:
        app: django-celery-beat
        tier: scheduler
    spec:
      containers:
        - name: celery-beat
          image: django-api:latest
          command:
            - celery
            - -A
            - config
            - beat
            - --loglevel=info
            - --scheduler=django_celery_beat.schedulers:DatabaseScheduler
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: DATABASE_URL
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: SECRET_KEY
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_URL
          envFrom:
            - configMapRef:
                name: django-config
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"