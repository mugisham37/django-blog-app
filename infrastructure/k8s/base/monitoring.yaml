apiVersion: v1
kind: ServiceMonitor
metadata:
  name: django-api-monitor
  namespace: fullstack-monolith
  labels:
    app: django-api
    release: prometheus
spec:
  selector:
    matchLabels:
      app: django-api
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: nextjs-web-monitor
  namespace: fullstack-monolith
  labels:
    app: nextjs-web
    release: prometheus
spec:
  selector:
    matchLabels:
      app: nextjs-web
  endpoints:
    - port: http
      path: /api/metrics
      interval: 30s
      scrapeTimeout: 10s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: fullstack-monolith
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      
      - job_name: 'django-api'
        static_configs:
          - targets: ['django-api-service:8000']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'nextjs-web'
        static_configs:
          - targets: ['nextjs-web-service:3000']
        metrics_path: '/api/metrics'
        scrape_interval: 30s
      
      - job_name: 'postgres-exporter'
        static_configs:
          - targets: ['postgres-exporter-service:9187']
        scrape_interval: 30s
      
      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter-service:9121']
        scrape_interval: 30s
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alerting-rules
  namespace: fullstack-monolith
data:
  alerts.yml: |
    groups:
      - name: fullstack-monolith.rules
        rules:
          - alert: HighErrorRate
            expr: rate(django_http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second"
          
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(django_http_request_duration_seconds_bucket[5m])) > 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }} seconds"
          
          - alert: DatabaseConnectionFailure
            expr: up{job="postgres-exporter"} == 0
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Database connection failure"
              description: "PostgreSQL database is not responding"
          
          - alert: RedisConnectionFailure
            expr: up{job="redis-exporter"} == 0
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Redis connection failure"
              description: "Redis cache is not responding"
          
          - alert: HighMemoryUsage
            expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 90
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is {{ $value }}%"
          
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is {{ $value }}%"
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"