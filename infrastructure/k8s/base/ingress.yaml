apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fullstack-monolith-ingress
  namespace: fullstack-monolith
  labels:
    app: fullstack-monolith
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-minute: "300"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
spec:
  tls:
    - hosts:
        - fullstack-monolith.local
        - api.fullstack-monolith.local
      secretName: tls-secret
  rules:
    - host: fullstack-monolith.local
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
          - path: /static
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
          - path: /media
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextjs-web-service
                port:
                  number: 3000
    - host: api.fullstack-monolith.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: django-api-service
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fullstack-monolith-network-policy
  namespace: fullstack-monolith
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from nginx proxy
    - from:
        - podSelector:
            matchLabels:
              app: nginx-proxy
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 3000
    # Allow ingress from same namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: fullstack-monolith
      ports:
        - protocol: TCP
          port: 5432
        - protocol: TCP
          port: 6379
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 3000
  egress:
    # Allow egress to same namespace
    - to:
        - namespaceSelector:
            matchLabels:
              name: fullstack-monolith
    # Allow egress to DNS
    - to: []
      ports:
        - protocol: UDP
          port: 53
    # Allow egress to external services (HTTPS)
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80