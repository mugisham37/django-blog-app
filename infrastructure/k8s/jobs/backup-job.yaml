apiVersion: batch/v1
kind: Job
metadata:
  name: db-backup-${JOB_ID}
  namespace: ${NAMESPACE}
  labels:
    app: database-backup
    job-id: "${JOB_ID}"
spec:
  template:
    metadata:
      labels:
        app: database-backup
        job-id: "${JOB_ID}"
    spec:
      restartPolicy: Never
      containers:
      - name: postgres-backup
        image: postgres:15-alpine
        command:
        - /bin/bash
        - -c
        - |
          echo "Starting database backup..."
          
          # Create backup filename with timestamp
          BACKUP_FILE="/backup/backup-$(date +%Y%m%d_%H%M%S)-${JOB_ID}.sql"
          
          # Create database backup
          pg_dump -h postgres-service -U postgres -d fullstack_blog > "$BACKUP_FILE"
          
          # Verify backup was created
          if [ -f "$BACKUP_FILE" ]; then
            echo "Backup created successfully: $BACKUP_FILE"
            ls -la "$BACKUP_FILE"
            
            # Create a compressed version
            gzip "$BACKUP_FILE"
            echo "Backup compressed: ${BACKUP_FILE}.gz"
            
            # Clean up old backups (keep last 30)
            find /backup -name "backup-*.sql.gz" -type f -mtime +30 -delete
            
            echo "Database backup completed successfully"
          else
            echo "Backup failed - file not created"
            exit 1
          fi
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: PGUSER
          value: "postgres"
        - name: PGHOST
          value: "postgres-service"
        - name: PGDATABASE
          value: "fullstack_blog"
        volumeMounts:
        - name: backup-storage
          mountPath: /backup
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: backup-pvc
      securityContext:
        fsGroup: 999
  backoffLimit: 3
  activeDeadlineSeconds: 1800