# ModSecurity Configuration for Production WAF
# OWASP Core Rule Set with custom rules for Django/Next.js applications

# Basic configuration
SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess On
SecResponseBodyMimeType text/plain text/html text/xml application/json
SecDefaultAction "phase:1,log,auditlog,pass"

# Request body handling
SecRequestBodyLimit 13107200
SecRequestBodyNoFilesLimit 131072
SecRequestBodyInMemoryLimit 131072
SecRequestBodyLimitAction Reject

# Response body handling
SecResponseBodyLimit 524288
SecResponseBodyLimitAction ProcessPartial

# File upload handling
SecTmpDir /tmp/
SecUploadDir /tmp/
SecUploadFileMode 0600

# Debug and audit logging
SecDebugLog /var/log/modsec/debug.log
SecDebugLogLevel 0
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABDEFHIJZ
SecAuditLogType Serial
SecAuditLog /var/log/modsec/audit.log

# Argument separator
SecArgumentSeparator &

# Cookie format
SecCookieFormat 0

# Unicode mapping
SecUnicodeMapFile unicode.mapping 20127

# Status engine
SecStatusEngine On

# Custom rules for Django applications
SecRule REQUEST_FILENAME "@beginsWith /api/" \
    "id:1001,\
    phase:1,\
    block,\
    msg:'Django API Protection',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'django',\
    tag:'api',\
    chain"
    SecRule REQUEST_METHOD "@rx ^(?:GET|POST|PUT|DELETE|PATCH|OPTIONS)$" \
        "t:none,\
        chain"
    SecRule REQUEST_HEADERS:Content-Type "@rx ^application/(?:json|x-www-form-urlencoded)" \
        "t:none"

# Rate limiting for API endpoints
SecAction \
    "id:1002,\
    phase:1,\
    nolog,\
    pass,\
    initcol:ip=%{REMOTE_ADDR},\
    setvar:ip.api_requests=+1,\
    expirevar:ip.api_requests=60"

SecRule IP:API_REQUESTS "@gt 100" \
    "id:1003,\
    phase:1,\
    block,\
    status:429,\
    msg:'API rate limit exceeded',\
    logdata:'IP: %{REMOTE_ADDR} exceeded API rate limit',\
    tag:'rate-limit',\
    tag:'api'"

# SQL Injection protection for Django
SecRule ARGS "@detectSQLi" \
    "id:1004,\
    phase:2,\
    block,\
    msg:'SQL Injection Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'sql-injection',\
    tag:'django'"

# XSS protection for Next.js
SecRule ARGS "@detectXSS" \
    "id:1005,\
    phase:2,\
    block,\
    msg:'XSS Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'xss',\
    tag:'nextjs'"

# CSRF protection
SecRule REQUEST_METHOD "@rx ^(?:POST|PUT|DELETE|PATCH)$" \
    "id:1006,\
    phase:2,\
    block,\
    msg:'Missing CSRF token',\
    logdata:'CSRF token missing for %{REQUEST_METHOD} request',\
    tag:'csrf',\
    chain"
    SecRule &REQUEST_HEADERS:X-CSRFToken "@eq 0" \
        "t:none,\
        chain"
    SecRule REQUEST_FILENAME "!@beginsWith /api/auth/login"

# File upload restrictions
SecRule FILES_TMPNAMES "@inspectFile /opt/modsecurity/file-inspector.lua" \
    "id:1007,\
    phase:2,\
    block,\
    msg:'Malicious file upload detected',\
    logdata:'File: %{MATCHED_VAR}',\
    tag:'file-upload',\
    tag:'malware'"

# Brute force protection for login endpoints
SecAction \
    "id:1008,\
    phase:1,\
    nolog,\
    pass,\
    initcol:ip=%{REMOTE_ADDR},\
    setvar:ip.login_attempts=+1,\
    expirevar:ip.login_attempts=300"

SecRule REQUEST_FILENAME "@rx /(?:login|signin|auth)" \
    "id:1009,\
    phase:2,\
    pass,\
    nolog,\
    chain"
    SecRule IP:LOGIN_ATTEMPTS "@gt 5" \
        "id:1010,\
        phase:2,\
        block,\
        status:429,\
        msg:'Login brute force detected',\
        logdata:'IP: %{REMOTE_ADDR} exceeded login attempts',\
        tag:'brute-force',\
        tag:'login'"

# Geographic IP blocking (customize as needed)
SecGeoLookupDB /usr/share/GeoIP/GeoIP.dat
SecRule REMOTE_ADDR "@geoLookup" \
    "id:1011,\
    phase:1,\
    block,\
    msg:'Request from blocked country',\
    logdata:'Country: %{GEO.COUNTRY_CODE}',\
    tag:'geo-block',\
    chain"
    SecRule GEO:COUNTRY_CODE "@rx ^(?:CN|RU|KP)$"

# User-Agent filtering
SecRule REQUEST_HEADERS:User-Agent "@rx ^(?:sqlmap|nmap|nikto|burp|owasp|masscan)" \
    "id:1012,\
    phase:1,\
    block,\
    msg:'Malicious User-Agent detected',\
    logdata:'User-Agent: %{MATCHED_VAR}',\
    tag:'user-agent',\
    tag:'scanner'"

# Response header security
SecRule RESPONSE_STATUS "@rx ^2" \
    "id:1013,\
    phase:3,\
    pass,\
    nolog,\
    setenv:security_headers=1"

Header always set X-Content-Type-Options "nosniff" env=security_headers
Header always set X-Frame-Options "SAMEORIGIN" env=security_headers
Header always set X-XSS-Protection "1; mode=block" env=security_headers
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" env=security_headers
Header always set Referrer-Policy "strict-origin-when-cross-origin" env=security_headers

# Custom error pages
ErrorDocument 403 /error-pages/403.html
ErrorDocument 404 /error-pages/404.html
ErrorDocument 429 /error-pages/429.html
ErrorDocument 500 /error-pages/500.html

# Include OWASP Core Rule Set
Include /etc/modsecurity/crs/crs-setup.conf
Include /etc/modsecurity/crs/rules/*.conf

# Include custom rules
Include /etc/modsecurity/custom-rules/*.conf