# Prometheus Configuration for Production Monitoring
# Comprehensive metrics collection for fullstack application

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'production'
    environment: 'prod'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics

  # Django Application metrics
  - job_name: 'django-api'
    static_configs:
      - targets: ['django-api:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Next.js Application metrics
  - job_name: 'nextjs-web'
    static_configs:
      - targets: ['nextjs-web:3000']
    scrape_interval: 15s
    metrics_path: /api/metrics
    scrape_timeout: 10s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Blackbox Exporter - Endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://${DOMAIN_NAME}
        - https://${DOMAIN_NAME}/api/health
        - https://${DOMAIN_NAME}/api/v1/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - ${DOMAIN_NAME}:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # DNS monitoring
  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns]
    static_configs:
      - targets:
        - ${DOMAIN_NAME}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888']
    scrape_interval: 30s

  # Custom application metrics
  - job_name: 'custom-metrics'
    static_configs:
      - targets: ['custom-metrics-exporter:8080']
    scrape_interval: 30s

  # Business metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['business-metrics-exporter:8081']
    scrape_interval: 60s

  # Security metrics
  - job_name: 'security-metrics'
    static_configs:
      - targets: ['security-metrics-exporter:8082']
    scrape_interval: 30s

  # Performance metrics from k6
  - job_name: 'k6-performance'
    static_configs:
      - targets: ['k6-performance:6565']
    scrape_interval: 30s

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.${DOMAIN_NAME}/api/v1/write"
    basic_auth:
      username: ${REMOTE_WRITE_USERNAME}
      password: ${REMOTE_WRITE_PASSWORD}
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Remote read configuration
remote_read:
  - url: "https://prometheus-remote-read.${DOMAIN_NAME}/api/v1/read"
    basic_auth:
      username: ${REMOTE_READ_USERNAME}
      password: ${REMOTE_READ_PASSWORD}